---
export const prerender = false;
import Layout from "../../layouts/Layout.astro";
import Footer from "../../sections/16-footer.astro";

import NavigationBar from "../../sections/1-navigation-bar.astro";
import { isSupportedLanguage, useTranslations } from "../../i18n/utils";
import IndexNumberBadge from "../../components/index_number_badge.astro";

const { lang } = Astro.params;

if (!isSupportedLanguage(lang)) {
	return;
}
const t = useTranslations(lang);

const nicNumber = Astro.url.searchParams.get("nic") || undefined;

let selectedNic:
	| undefined
	| {
			index_no: string;
			name: string;
			stream: string;
			medium: string;
			rank_district: string;
			exam_district: string;
			exam_centre: string;
	  }
	| {
			message_ta: string;
			message_en: string;
	  } = undefined;

let isError = false;
if (nicNumber) {
	try {
		const response = await fetch(
			`${import.meta.env.PUBLIC_API_URL}/student/nic/${nicNumber}`,
		);
		const data = await response.json();

		if (!response.ok) {
			throw new Error(data.message || "Failed to fetch NIC data");
		}
		if (data.error) {
			selectedNic = null;
		} else {
			selectedNic = data;
			console.log(data);
		}
	} catch (error) {
		console.error("Error fetching NIC data:", error);
		selectedNic = null;
		isError = true;
	}
}

const instructionItems = new Array(12).fill(null).map((_, i) => {
	// @ts-expect-error
	return t(`instructions__item_${(i + 1).toString().padStart(2, "0")}`);
});
---

<Layout pageTitle={t("find_your_index_no__title")}>
	<div class="bg-purple-800">
		<NavigationBar />
	</div>
	<section
		class="bg-white text-primary-900 grid grid-cols-1 lg:grid-cols-[1fr_auto] grid-rows-1 lg:grid-rows-[auto_auto] min-h-[50vh] gap-x-5 mb-5"
	>
		<div class="col-span-full row-start-1">
			<h2>{t("instructions__title")}</h2>
			<ul>
				{instructionItems.map((item) => <li>{item}</li>)}
			</ul>
		</div>
		<div class="col-start-1 row-start-2 flex flex-col">
			<div>
				<h1 class="text-3xl">
					{t("find_your_index_no")}
				</h1>
				<p class="text-xl text-gray-950 max-w-prose">
					{t("find_your_index_no_p")}
				</p>
			</div>
			<form
				method="get"
				action={`/${lang}/index-number`}
				class="flex items-center gap-2 max-w-2xl"
			>
				<input
					class="w-full max-w-2xl px-4 md:px-5 py-2 md:py-3 rounded-xl bg-gray-50 border border-primary-900/20 placeholder-rust-orange-50/25 text-md focus:outline-none focus:border-gray focus:bg-white focus:z-10 focus:shadow-sm"
					type="text"
					name="nic"
					value={nicNumber}
					placeholder={t("nic_no")}
					inputmode="numeric"
				/>
				<button
					class="w-1/2 py-2 rounded-full text-primary-800 text-xl bg-white hover:bg-delft-blue-50/50 border border-sm border-black/25 focus:outline-none focus:shadow focus:border-none"
				>
					<i class="fa-solid fa-magnifying-glass size-4"></i><span class="ml-3"
						>{t("find_button")}</span
					>
				</button>
			</form>
			{
				typeof selectedNic == "undefined" ? null : selectedNic == null ? (
					<div class="text-red-500 text-xl text-center mt-5 min-h-[160px]">
						{isError
							? t("index_number__not_found")
							: t("index_number__error_fetching")}
					</div>
				) : "message_ta" in selectedNic ? (
					<div class="text-red-500 text-xl text-center mt-5 min-h-[160px]">
						{isError
							? t("index_number__not_found")
							: lang == "ta"
								? selectedNic.message_ta
								: selectedNic.message_en}
					</div>
				) : (
					<div class="grid grid-cols-1 items-center justify-center space-y-4 w-full mt-5">
						<IndexNumberBadge
							badge_text={t("index_number__full_name")}
							value_text={selectedNic.name}
						/>
						<div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
							<IndexNumberBadge
								badge_text={t("index_number__index_no")}
								value_text={selectedNic.index_no}
							/>
							<IndexNumberBadge
								badge_text={t("index_number__stream")}
								value_text={selectedNic.stream}
							/>
							<IndexNumberBadge
								badge_text={t("index_number__medium")}
								value_text={selectedNic.medium}
							/>
							<IndexNumberBadge
								badge_text={t("index_number__rank_district")}
								value_text={selectedNic.rank_district}
							/>
							<IndexNumberBadge
								badge_text={t("index_number__exam_district")}
								value_text={selectedNic.exam_district}
							/>
						</div>
						<IndexNumberBadge
							badge_text={t("index_number__exam_centre")}
							value_text={selectedNic.exam_centre}
						/>
					</div>
				)
			}
		</div>
		<div
			class="col-start-1 lg:col-start-2 row-start-3 lg:row-start-2 flex flex-col w-full max-w-screen-xl items-center mx-auto mt-20"
		>
			<p class="m-0 text-xl text-center font-medium">
				{t("index_number__our_sponsors")}
			</p>
			<div class="flex flex-col my-4 gap-4">
				<img
					class="h-auto w-80 lg:w-96 object-contain sm:rounded-b-lg"
					src="/public/sponsors/sltc.jpg"
					alt="SLTC"
				/>
				<img
					class="h-auto w-80 lg:w-96 object-contain sm:rounded-b-lg"
					src="/public/sponsors/northway-family-mart.png"
					alt="Northway Family Mart"
				/>
			</div>
		</div>
	</section>
</Layout>
<div class="p-2 sm:mx-[30px]">
	<Footer />
</div>
<style>
	@media screen and (max-width: 400px) {
		input {
			font-size: 16px;
		}
	}
	table {
		width: 100%;
	}
	ul {
		@apply grid list-none pl-0 md:grid-cols-2 gap-2 mb-0;
		@apply bg-[#efe6f5] border-[#6b21a8] border-l-4 border-0 border-solid py-3 px-4;
	}
	li {
		@apply max-w-prose text-lg pl-1 rounded-md flex h-full;

		&::before {
			@apply mr-2 block;
			content: "-";
			color: #6b21a8;
		}
	}
</style>

<style is:global>
	body > * {
		@apply px-[var(--body-margin-x)];
	}
</style>
